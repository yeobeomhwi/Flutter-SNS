import 'package:flutter/material.dart';import 'package:flutter_riverpod/flutter_riverpod.dart';import 'package:go_router/go_router.dart';import 'package:social_login_buttons/social_login_buttons.dart';import '../../services/firebase_service.dart';import '../../providers/login_providers.dart';class LoginScreen extends ConsumerWidget {  @override  Widget build(BuildContext context, WidgetRef ref) {    final loginState = ref.watch(loginProvider);    final emailController = TextEditingController();    final passwordController = TextEditingController();    final firebaseService = FirebaseService(); // FirebaseService 인스턴스 생성    // 로그인 상태에 따른 스낵바 표시    if (loginState.errorMessage.isNotEmpty) {      WidgetsBinding.instance.addPostFrameCallback((_) {        ScaffoldMessenger.of(context).showSnackBar(          SnackBar(content: Text(loginState.errorMessage)),        );      });    }    return Scaffold(      appBar: AppBar(        title: const Text('Login'),      ),      body: Padding(        padding: const EdgeInsets.all(16.0),        child: Column(          mainAxisAlignment: MainAxisAlignment.center,          children: <Widget>[            TextField(              controller: emailController,              decoration: const InputDecoration(labelText: 'Email'),            ),            TextField(              controller: passwordController,              obscureText: true,              decoration: const InputDecoration(labelText: 'Password'),            ),            const SizedBox(height: 40),            loginState.isLoading                ? const CircularProgressIndicator()                : SocialLoginButton(              backgroundColor: Colors.white,              height: 50,              text: 'Login with Email',              textColor: Colors.black,              fontSize: 20,              buttonType: SocialLoginButtonType.generalLogin,              onPressed: () {                ref.read(loginProvider.notifier).login(                  emailController.text,                  passwordController.text,                  context,                );              },            ),            const SizedBox(height: 20),            const Divider(),            const SizedBox(height: 20),            SocialLoginButton(              buttonType: SocialLoginButtonType.google,              onPressed: () async {                try {                  await firebaseService.signInWithGoogle(); // 구글 로그인 호출                  ScaffoldMessenger.of(context).showSnackBar(                    const SnackBar(content: Text('구글 로그인 성공')),                  );                  GoRouter.of(context).go('/Main'); // 로그인 후 홈 화면으로 이동                } catch (e) {                  ScaffoldMessenger.of(context).showSnackBar(                    SnackBar(content: Text('구글 로그인 실패: $e')),                  );                  print(e);                }              },            ),            const SizedBox(height: 20),            SocialLoginButton(              backgroundColor: Colors.white,              height: 50,              text: 'Sign Up with Email',              textColor: Colors.black,              fontSize: 20,              buttonType: SocialLoginButtonType.generalLogin,              onPressed: () {                GoRouter.of(context).push('/Signup');              },            ),          ],        ),      ),    );  }}